---

- hosts: "{{ env }}"
  become: true
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes
    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no
    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists


- hosts: "{{ env }}"    
  tasks:    
    - name: Check if all the systems responding to ssh
      local_action:
        module: wait_for
           host={{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}
           port=22
           search_regex=OpenSSH
           delay=15
           timeout=300
           state=started  
    - name: Check the uptime of the servers
      shell: uptime
      register: Uptime
    - debug: var=Uptime

   
- hosts: "{{ env }}"
  gather_facts: yes 
  tasks:
    - name: "Populate service facts"
      service_facts:
    - name: "See the service <cron> facts as they are"
      debug:
        msg: "{{ansible_facts.services['cron.service'].state}}"
    - name: "Verify if cron is running!"
      assert:
        that:
          - "'{{ansible_facts.services['cron.service'].state}}' == 'running'"
        fail_msg: "cron is down!"
        success_msg: "cron is up!"
      
      
- hosts: "{{ env }}"
  tasks:
    - name: Check that you can connect (GET) to a page and it returns a status 200
      uri:
        url: http://192.168.0.34
      register: result
      retries: 10
      delay: 2
